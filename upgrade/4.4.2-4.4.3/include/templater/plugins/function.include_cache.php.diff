Index: include/templater/plugins/function.include_cache.php
--- include/templater/plugins/function.include_cache.php	2011-01-10 16:11:53.000000000 +0300
+++ include/templater/plugins/function.include_cache.php	2011-04-20 14:28:27.000000000 +0400
@@ -40,7 +40,7 @@
  * @author     Ruslan R. Fazlyev <rrf@x-cart.com>
  * @copyright  Copyright (c) 2001-2011 Ruslan R. Fazlyev <rrf@x-cart.com>
  * @license    http://www.x-cart.com/license.php X-Cart license agreement
- * @version    $Id: function.include_cache.php,v 1.1.2.2 2011/01/10 13:11:53 ferz Exp $
+ * @version    $Id: function.include_cache.php,v 1.1.2.5 2011/04/20 10:28:27 aim Exp $
  * @link       http://www.x-cart.com/
  * @see        ____file_see____
  */
@@ -61,6 +61,7 @@
 function smarty_function_include_cache($params, &$smarty)
 {
     global $config; 
+
     static $result = array();
 
 	$file = $params['file'];
@@ -71,15 +72,14 @@
 		return;
 	}
 
-    $_data_cache_ttl = $config['General']['data_cache_ttl'] > 0 ? $config['General']['data_cache_ttl'] : 3;
-    $_data_cache_ttl *= 3600;
 
 	$saved_cache_lifetime = $smarty->cache_lifetime;
+    $_data_cache_ttl = -1; // force the cache to never expire (Cache file will be refreshed by clear_all_cache call)
 	$cache_lifetime = isset($params['cache_lifetime']) ? $params['cache_lifetime'] : $_data_cache_ttl;
 
-	func_unset($params, 'file', 'cache_lifetime');
+	func_unset($params, 'file', 'cache_lifetime', 'use_static_var');
 
-	$cache_id = 'smarty_|' . md5(serialize($params));
+    $cache_id = func_get_template_key($file, $params);
 
     $md5_key = $cache_id . $file;
     if (
@@ -90,9 +90,14 @@
     }
 
 	// Save global smarty settings and variables
-    $smarty->cache_lifetime = $cache_lifetime;
 	$saved_caching = $smarty->caching;
-	$smarty->caching = 2;
+
+    if ($config['General']['use_cached_templates'] == 'Y')
+    	$smarty->caching = 2;
+    else        
+    	$smarty->caching = 0;
+
+    $smarty->cache_lifetime = $cache_lifetime;
 
     if (is_array($params))
 	foreach($params as $k => $v) {
@@ -115,4 +120,84 @@
 
     return $content;
 }
+
+
+function func_get_template_key($file, $params)
+{
+    static $vars_used_in_templates = array(
+        'customer/main/buy_now.tpl' => array (
+            'cat'=> 1,
+            'featured'=> 1,
+            'is_matrix_view'=> 1,
+            'login'=> 1,
+            'smarty_get_cat'=> 1,
+            'smarty_get_page'=> 1,
+            'smarty_get_quantity'=> 1,
+            '_shop_language'=>1,
+            'product' => array (
+                'productid'=> 1,
+                'add_date'=> 1,
+                'avail'=> 1,
+                'min_amount'=> 1,
+                'price'=> 1,
+                'special_price'=> 1,
+                'use_special_price'=> 1,
+                'variantid'=> 1,
+                'list_price'=> 1,
+                'taxed_price'=> 1,
+                'taxes'=> 1,
+                'appearance' => array (
+                    'buy_now_enabled'=> 1,
+                    'buy_now_buttons_enabled'=> 1,
+                    'buy_now_cart_enabled'=> 1,
+                    'buy_now_form_enabled'=> 1,
+                    'dropout_actions'=> 1,
+                    'empty_stock'=> 1,
+                    'force_1_amount'=> 1,
+                    'loop_quantity'=> 1,
+                    'min_quantity'=> 1,
+                    'quantity_input_box_enabled'=> 1,
+                    'has_market_price'=> 1,
+                    'has_price'=> 1,
+                    'market_price_discount'=> 1,
+                ),
+            ), // 'product' => array (
+        )
+    );
+
+    // To work cache correctly for multilanguage store
+    global $shop_language;
+
+    $params['_shop_language'] = $shop_language;
+    if (isset($vars_used_in_templates[$file])) {
+        $params = func_array_intersect_key_recursive($params, $vars_used_in_templates[$file]);
+
+        if (!empty($params['product']['productid']))
+            $cache_id = 'smarty_|' . $params['product']['productid'] . '|' . md5(serialize($params));
+        else            
+            $cache_id = 'smarty_|' . md5(serialize($params));
+
+    } else {
+        $cache_id = 'smarty_|' . md5(serialize($params));
+    }
+
+    return $cache_id;
+}
+
+function func_array_intersect_key_recursive($main_array, $mask) 
+{
+    if (!is_array($main_array)) { return $main_array; }
+
+    foreach ($main_array as $k=>$v) {
+        if (!isset($mask[$k])) { 
+            unset($main_array[$k]); 
+            continue; 
+        }
+
+        if (is_array($mask[$k])) { 
+            $main_array[$k] = func_array_intersect_key_recursive($main_array[$k], $mask[$k]); 
+        }
+    }
+    return $main_array;
+}
 ?>
